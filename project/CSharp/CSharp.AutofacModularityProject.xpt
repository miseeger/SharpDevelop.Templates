<?xml version="1.0"?>
<Template originator="Michael Seeger" created="12/08/2013">

	<!-- Template Header -->
	<TemplateConfiguration>
		<Name>Autofac Modularity Project</Name>
		<Category>C#</Category>
		<Subcategory>Windows Applications</Subcategory>
		<Icon>file:${SharpDevelopBinPath}\..\data\templates\project\CSharp\ProjectIcons\CSharp.AutofacModularityProject.png</Icon>
		<Description>Creates a multi layered architecture for mudulized applications.</Description>
		<SupportedTargetFrameworks>v4.0;v4.0Client</SupportedTargetFrameworks>
	</TemplateConfiguration>

	<!-- Actions -->
	<Actions>
		<Open filename="Hosts\${ProjectName}.Hosts.Console\Program.cs" />
		<RunCommand path="/AddIns/PackageManagement/TemplateCommands/InstallPackages" />
	</Actions>

	<!-- The Solution -->
	<Solution name="${ProjectName}" directory=".">

		<!-- The Startup-Project is the Shell-Project -->
		<Options>
			<StartupProject>${ProjectName}.Hosts.Console</StartupProject>
		</Options>

		<!-- Common Solution Folder -->
		<SolutionFolder name="Common" directory="Common">

			<!-- Common-Business-Project -->
			<Project name="${ProjectName}.Common.Business" directory="Common\${ProjectName}.Common.Business" language="C#">

				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="AutofacModularity" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<ProjectItems>
					<ProjectReference Include="..\${SolutionName}.Common.Interfaces\${SolutionName}.Common.Interfaces.csproj" />
					<ProjectReference Include="..\${SolutionName}.Common.Business.Model\${SolutionName}.Common.Business.Model.csproj" />
				</ProjectItems>

				<Files>
					<File name="BusinessService.cs">
<![CDATA[using ${SolutionName}.Common.Interfaces.Services;
using AutofacModularity;

namespace ${StandardNamespace}
{

	[RegisterService]
	public class BusinessService : IBusinessService
	{

		public IDataService DataService { get; private set; }


		public BusinessService(IDataService dataService)
		{
			DataService = dataService;
		}

	}

}]]>
					</File>
					<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
</packages>]]>
					</File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>

			<!-- Common-BusinessModel-Project -->
			<Project name="${ProjectName}.Common.Business.Model" directory="Common\${ProjectName}.Common.Business.Model" language="C#">

				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<Files>
					<File name="Interfaces\empty.txt"><![CDATA[.]]></File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>
				
			<!-- Common-Data-Project -->
			<Project name="${ProjectName}.Common.Data" directory="Common\${ProjectName}.Common.Data" language="C#">

				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="AutofacModularity" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<ProjectItems>
					<ProjectReference Include="..\${SolutionName}.Common.Interfaces\${SolutionName}.Common.Interfaces.csproj" />
					<ProjectReference Include="..\${SolutionName}.Common.Data.Model\${SolutionName}.Common.Data.Model.csproj" />
				</ProjectItems>

				<Files>
					<File name="DataService.cs"> 
<![CDATA[using ${SolutionName}.Common.Interfaces.Services;
using AutofacModularity;
using AutofacModularity.Interfaces;

namespace ${StandardNamespace}
{

	[RegisterService]
	public class DataService : IDataService
	{

		public string ConnectionString { get; set; }
		public ILoggingService LoggingService { get; private set; }

		public DataService(ILoggingService loggingService, string connectionString)
		{
			ConnectionString = connectionString;
			LoggingService = loggingService;
		}

		public void Hello()
		{
			System.Console.WriteLine("DataService.ConnectionString: {0}", ConnectionString);
		}
	}

}]]>
					</File>
					<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
</packages>]]>
					</File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>

			<!-- Common-DataModel-Project -->
			<Project name="${ProjectName}.Common.Data.Model" directory="Common\${ProjectName}.Common.Data.Model" language="C#">

				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<Files>
					<File name="Interfaces\empty.txt"><![CDATA[.]]></File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>
			
			<!-- Common-Interfaces-Project -->
			<Project name="${ProjectName}.Common.Interfaces" directory="Common\${ProjectName}.Common.Interfaces" language="C#">

				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="NLog" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<Files>
					<File name="Services\IBusinessService.cs"> 
<![CDATA[namespace ${StandardNamespace}.Services
{
	public interface IBusinessService
	{

		IDataService DataService { get; }

	}
}
]]>
					</File>
					<File name="Services\IDataService.cs">  
<![CDATA[using System;

namespace ${StandardNamespace}.Services
{

	public interface IDataService
	{

		String ConnectionString { get; set; }
		ILoggingService LoggingService { get; }

		void Hello();

	}

}
]]>
					</File>
					<File name="Services\ILoggingService.cs">  
<![CDATA[using System;
using NLog;

namespace ${StandardNamespace}.Services
{

	public interface ILoggingService
	{
		void Log(LogLevel lvl, string Message);
		void LogEx(string Message, Exception Ex);
	}

}
]]>
					</File>
					<File name="packages.config">
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="NLog" version="2.1.0" />
</packages>
]]>
					</File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>
			
			<!-- Common-Services-Project -->
			<Project name="${ProjectName}.Common.Services" directory="Common\${ProjectName}.Common.Services" language="C#">

				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="AutofacModularity" />
					<Reference Include="NLog" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<ProjectItems>
					<ProjectReference Include="..\${SolutionName}.Common.Interfaces\${SolutionName}.Common.Interfaces.csproj" />
				</ProjectItems>

				<Files>
					<File name="LoggingService.cs"> 
<![CDATA[using System;
using ${SolutionName}.Common.Interfaces.Services;
using AutofacModularity;
using NLog;

namespace ${StandardNamespace}
{

	[RegisterService]
	public class LoggingService : ILoggingService
	{

		public static NLog.Logger _logger = LogManager.GetLogger("${SolutionName}");

		public void Log(LogLevel lvl, string Message)
		{
			_logger.Log(lvl, Message);
		}


		public void LogEx(string Message, Exception Ex)
		{
			_logger.ErrorException(Message, Ex);
		}

	}

}]]>
					</File>
					<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
  <package id="NLog" version="2.1.0" />
</packages>]]>
					</File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>
				
		</SolutionFolder>

		<!-- Hosts Solution Folder -->
		<SolutionFolder name="Hosts" directory="Hosts">
		
			<Project name="${ProjectName}.Hosts.Console" directory="Hosts\${ProjectName}.Hosts.Console" language="C#">

				<PropertyGroup>
					<OutputType>Exe</OutputType>
					<ProjectGuid>B72B0B2C-EA8A-4022-82C3-2564B38148B9</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>
	
				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\</OutputPath>
				</PropertyGroup>
	
				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\</OutputPath>
				</PropertyGroup>
	
				<ProjectItems>
					<Reference Include="AutofacModularity" />
					<Reference Include="Autofac" />
					<Reference Include="EmailModule" />
					<Reference Include="NLog" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Data" />
					<Reference Include="System.Data.DataSetExtensions" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>
	
				<ProjectItems>
					<ProjectReference Include="..\..\Common\${SolutionName}.Common.Interfaces\${SolutionName}.Common.Interfaces.csproj" />
				</ProjectItems>
	
				<Files>
					<File name="app.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
	
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
	</startup>

	<appSettings>

		<add key="CommonServices.ConnectionString" value="Dev ConnectionString"/>

		<!-- You have to install smtp4dev (http://smtp4dev.codeplex.com/) for testing purposes using "localhost". -->
		<add key="CommonServices.MailSmtpServerIp" value="localhost" />
		<add key="CommonServices.MailSmtpServerPort" value="25" />
		<add key="CommonServices.MailTemplatesDirectory" value="Modules\MailTemplates" />
		<add key="CommonServices.MailDefaultFromAddress" value="noreply@mymail.net" />

		<add key="CheckData.Test" value="CheckData-Parameter from app.config"/>

	</appSettings>

</configuration>
]]>
					</File>
					<File name="ConsoleBootstrapper.cs"> 
<![CDATA[using Autofac;
using AutofacModularity;
using AutofacModularity.Interfaces;

namespace ${StandardNamespace}
{

	public class ConsoleBootstrapper : AbstractBootstrapper
	{

		protected override void ConfigureContainer(ContainerBuilder builder)
		{
			System.Console.WriteLine("Configuring DI Container ...");

			builder.RegisterAssemblyModulesFromFile(@"Modules\${SolutionName}.Modules.Common.Services.dll",
				(f) => System.Console.WriteLine("   {0}",f));

			builder.RegisterAssemblyModulesFromDirectory(@"Modules","${SolutionName}.Modules",
				"${SolutionName}.Modules.Common",
				(f) => System.Console.WriteLine("   {0}", f));
		}


		protected override void RegisterShell(ContainerBuilder builder)
		{
			builder.RegisterType<Shell>().As<IShell>();
		}

	}

}
]]>
					</File>
					<File name="nlog.config" CopyToOutputDirectory="Always">
<![CDATA[<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<targets>
		<target name="FileLogger" xsi:type="File" fileName="${ProjectName}.log" 
			layout="${longdate}|${level:uppercase=true}|${logger}|${machinename}|${processid}|${windows-identity}|${message}"/>
		<target name="FileLoggerErr" xsi:type="File" fileName="${ProjectName}_Error.log" 
			layout="${longdate}|${level:uppercase=true}|${logger}|${machinename}|${processid}|${windows-identity}|${message}${onexception:inner=|${stacktrace}|${newline}${exception:format=ToString,method:maxInnerExceptionLevel=5}}" />
		<target name="MailLoggerErr" xsi:type="Mail" html="true" subject="Exception in ${ProjectName}" 
			to="a.b@c.de" from="noreply@mymail.de" smtpServer="127.0.0.1" smtpPort="25" 
			body="${longdate}|${level:uppercase=true}|${logger}|${machinename}|${processid}|${windows-identity}|${message}${onexception:inner=|${stacktrace}|${newline}${exception:format=ToString,method:maxInnerExceptionLevel=5}}" />
	</targets>

	<rules>
		<logger name="*" minlevel="Debug" maxlevel="Warn" writeTo="FileLogger" />
		<logger name="*" minlevel="Error" maxlevel="Fatal" writeTo="FileLoggerErr" />
		<!--logger name="*" minlevel="Error" maxlevel="Fatal" writeTo="MailLoggerErr" /-->
		
	</rules>

</nlog>

]]>
					</File>
					<File name="Program.cs"> 
<![CDATA[using System;
using ${SolutionName}.Hosts.Console;

namespace ${StandardNamespace}
{
	class Program
	{
		public static void Main(string[] args)
		{
			var bootstrapper = new ConsoleBootstrapper();
			bootstrapper.Run();
		}
	}
}
]]>
					</File>
					<File name="Shell.cs"> 
<![CDATA[using System;
using System.Linq;
using ${SolutionName}.Common.Interfaces;
using ${SolutionName}.Common.Interfaces.Services;
using Autofac;
using AutofacModularity;
using AutofacModularity.Interfaces;
using NLog;

namespace ${StandardNamespace}
{
	public class Shell : IShell
	{
		
		private IComponentContext _container;
		private IDataService _dataService;
		private IBusinessService _businessService;
		private ILoggingService _logger;


		public Shell(IComponentContext container, IDataService dataservice, 
			IBusinessService businessservice, ILoggingService logger)
		{
			_container = container;
			_dataService = dataservice;
			_businessService = businessservice;
			_logger = logger;
		}


		private void CurrentDomain_UnhandledException(Object sender, UnhandledExceptionEventArgs e)
		{
			try
			{
				Exception ex = (Exception)e.ExceptionObject;
				_logger.LogEx("Unhadled domain exception!", ex);
			}
			catch (Exception exc)
			{
				_logger.LogEx("Exception inside UnhadledExceptionHandler!", exc);
			}
			finally
			{
				Environment.Exit(0);
			}
		}


		public void Run()
		{

			AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(CurrentDomain_UnhandledException);

			System.Console.WriteLine("\nRegistered Components ({0}):",
				_container.ComponentRegistry.Registrations.Count());

			foreach (var entry in _container.ComponentRegistry.Registrations)
			{
				System.Console.WriteLine("   {0}", entry.ToString().Split(',')[0]);
				_logger.Log(LogLevel.Info, String.Format("Registered: {0}", entry.ToString().Split(',')[0]));
			}

			System.Console.WriteLine("\nFrom DataService:");
			_dataService.Hello();

			System.Console.WriteLine("\nFrom DataService via BusinessService:");
			_businessService.DataService.Hello();

			System.Console.WriteLine("\nRunning CheckDataPlugin:");
			var cr = _container.ResolveNamed<IPlugin>("CheckDataPlugin");
			cr.Run();

			System.Console.WriteLine("\nRunning ImportDataPlugin:");
			var ir = _container.ResolveNamed<IPlugin>("ImportDataPlugin");
			ir.Run();

			System.Console.Write("\nPress any key to continue . . . ");
			System.Console.ReadKey(true);

		}

	}

}
]]>
					</File>
					<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
  <package id="mailzor" version="1.0.0.12" />
  <package id="NLog" version="2.1.0" />
</packages>]]>
					</File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>

			</Project>

		</SolutionFolder>
		
		
		<!-- Modules Solutionfolder -->
		<SolutionFolder name="Modules" directory="Modules">
		
			<!-- Common Modules Solutionfolder -->

			<SolutionFolder name="Common" directory = "Common">
			
				<!-- Common-Services-Module-Project -->
				<Project name="${ProjectName}.Modules.Common.Services" directory="Modules\${ProjectName}.Modules.Common.Services" language="C#">
	
					<PropertyGroup>
						<OutputType>Library</OutputType>
						<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
						<AppDesignerFolder>Properties</AppDesignerFolder>
					</PropertyGroup>
	
					<PropertyGroup configuration="Debug">
						<OutputPath>..\..\Bin\Debug\Modules\</OutputPath>
					</PropertyGroup>
	
					<PropertyGroup configuration="Release">
						<OutputPath>..\..\..\Bin\Release\Modules\</OutputPath>
					</PropertyGroup>
	
					<ProjectItems>
						<Reference Include="Autofac" />
						<Reference Include="AutofacModularity" />
						<Reference Include="EmailModule" />
						<Reference Include="System" />
						<Reference Include="System.Core" />
						<Reference Include="System.Xml" />
						<Reference Include="System.Xml.Linq" />
					</ProjectItems>
	
					<Files>
						<File name="CommonServicesModule.cs"> 
<![CDATA[using System;
using System.Linq;
using System.Net.Mail;
using System.Reflection;
using Autofac;
using AutofacModularity;
using EmailModule;


namespace ${StandardNamespace}
{

	public class CommonServicesModule : ConfigurableModule
	{

		public string ConnectionString { get; set; }
		public string MailSmtpServerIp { get; set; }
		public string MailSmtpServerPort { get; set; }
		public string MailTemplatesDirectory { get; set; }
		public string MailDefaultFromAddress { get; set; }


		protected override void Load(ContainerBuilder builder)
		{
			base.Load(builder);

			builder.RegisterAssemblyTypes(Assembly.LoadFrom("${SolutionName}.Common.Services.dll"))
				.Where(t => t.GetCustomAttributes(typeof (RegisterServiceAttribute), false).Any())
				.AsSelf()
				.AsImplementedInterfaces();

			builder.RegisterAssemblyTypes(Assembly.LoadFrom("${SolutionName}.Common.Data.dll"))
				.Where(t => t.GetCustomAttributes(typeof(RegisterServiceAttribute), false).Any())
				.AsSelf()
				.AsImplementedInterfaces().WithParameter("connectionString", ConnectionString);

			builder.RegisterAssemblyTypes(Assembly.LoadFrom("${SolutionName}.Common.Business.dll"))
				.Where(t => t.GetCustomAttributes(typeof(RegisterServiceAttribute), false).Any())
				.AsSelf()
				.AsImplementedInterfaces();

			builder.Register(c => new FileSystemEmailTemplateContentReader(MailTemplatesDirectory))
				.As<IEmailTemplateContentReader>();

			builder.RegisterType<EmailTemplateEngine>()
				.As<IEmailTemplateEngine>();

			builder.Register(
				c => new EmailSender
				{
					CreateClientFactory = () 
						=> new SmtpClientWrapper(new SmtpClient(MailSmtpServerIp, Convert.ToInt16(MailSmtpServerPort)))
					, DefaultFromAddress = MailDefaultFromAddress
				})
				.As<IEmailSender>();

			builder.Register(
				c => new EmailSubsystem(
					c.Resolve<IEmailTemplateEngine>(), 
					c.Resolve<IEmailSender>()))
				.As<IEmailSystem>();
		}

	}
}
]]>
					</File>
					<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
  <package id="mailzor" version ="1.0.0.12" />
</packages>]]>
					</File>
					<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
					</Files>
	
				</Project>
			
			</SolutionFolder>
			
			<!-- CheckData-Module-Project -->
			<Project name="${ProjectName}.Modules.CheckData" directory="Modules\${ProjectName}.Modules.CheckData" language="C#">
	
				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\Modules\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\Modules\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="Autofac" />
					<Reference Include="AutofacModularity" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<Files>
				<File name="CheckDataModule.cs"> 
<![CDATA[using Autofac;
using AutofacModularity;
using AutofacModularity.Interfaces;

namespace ${StandardNamespace}
{

	public class CheckDataModule : ConfigurableModule
	{

		public string Test { get; set; }


		protected override void Load(ContainerBuilder builder)
		{
			base.Load(builder);
			builder.RegisterType<CheckDataPlugin>().Named<IPlugin>("CheckDataPlugin").WithParameter("test", Test);
		}

	}

}
]]>
				</File>
				<File name="CheckDataPlugin.cs"> 
<![CDATA[using System;
using AutofacModularity.Interfaces;

namespace ${StandardNamespace}
{

	public class CheckDataPlugin : IPlugin
	{

		public String Test { get; set; }


		public CheckDataPlugin(String test)
		{
			Test = test;	
		}


		public void Run()
		{
			Console.WriteLine("CheckData-Plugin: ready ({0})", Test);
		}

	}

}
]]>
				</File>
				<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
</packages>]]>
				</File>
				<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>
	
			</Project>


			<!-- ImportData-Module-Project -->
			<Project name="${ProjectName}.Modules.ImportData" directory="Modules\${ProjectName}.Modules.ImportData" language="C#">
	
				<PropertyGroup>
					<OutputType>Library</OutputType>
					<ProjectGuid>68965282-719f-4ebc-8338-9da9ecd6f50e</ProjectGuid>
					<AppDesignerFolder>Properties</AppDesignerFolder>
				</PropertyGroup>

				<PropertyGroup configuration="Debug">
					<OutputPath>..\..\Bin\Debug\Modules\</OutputPath>
				</PropertyGroup>

				<PropertyGroup configuration="Release">
					<OutputPath>..\..\Bin\Release\Modules\</OutputPath>
				</PropertyGroup>

				<ProjectItems>
					<Reference Include="Autofac" />
					<Reference Include="AutofacModularity" />
					<Reference Include="EmailModule" />
					<Reference Include="System" />
					<Reference Include="System.Core" />
					<Reference Include="System.Xml" />
					<Reference Include="System.Xml.Linq" />
				</ProjectItems>

				<Files>
				<File name="MailTemplates\ImportDataMail.cshtml" CopyToOutputDirectory="Always">
<![CDATA[@{
	From = Model.From;
	To.Add(Model.To);
	Subject = "Welcome to ${ProjectName}";
}
]]>
				</File>
				<File name="MailTemplates\ImportDataMail.html.cshtml" CopyToOutputDirectory="Always">
<![CDATA[<html>
	<head>
		<title>Welcome to ${ProjectName}</title>
	</head>
	<body>
		<p>Dear @Model.Name,</p>
		<p>Your trial account has been created.</p>
		<p>To start using the system go to <a href="http://applciation.com" alt="app url">http://applciation.com</a></p>
		<p></p>
		<p>To verify your email address please go to:</p>
		<p><a href="@Model.VerificationUri" alt="app verification url">@Model.VerificationUri</a></p>
		<p>If you have trouble clicking on that link, please copy and paste it into your browsers address bar.</p>
		[html]
	</body>
</html>
]]>
				</File>
				<File name="MailTemplates\ImportDataMail.text.cshtml" CopyToOutputDirectory="Always">
<![CDATA[Dear @Model.Name,

Your trial account has been created.

To start using the system go to http://applciation.com


To verify your email address please go to:

@Model.VerificationUri

If you have trouble clicking on that link, please copy and paste it into your browsers address bar.

[Text]
]]>
				</File>
				<File name="ImportDataModule.cs"> 
<![CDATA[using Autofac;
using AutofacModularity;
using AutofacModularity.Interfaces;

namespace ${StandardNamespace}
{

	public class ImportDataModule : ConfigurableModule
	{

		protected override void Load(ContainerBuilder builder)
		{
			base.Load(builder);
			builder.RegisterType<ImportDataPlugin>().Named<IPlugin>("ImportDataPlugin");
		}

	}

}
]]>
				</File>
				<File name="ImportDataPlugin.cs"> 
<![CDATA[using System;
using AutofacModularity.Interfaces;
using EmailModule;

namespace ${StandardNamespace}
{

public class ImportDataPlugin : IPlugin
	{

		private IEmailSystem _mailer;
		
		
		public ImportDataPlugin(IEmailSystem Mailer)
		{
			_mailer = Mailer;
		}


		public void Run()
		{
			Console.WriteLine("ImportData-Plugin: ready");
			
			var model = new 
			{
				To = "a.b@c.de"
				,From = ""
				,Name = "Mr. Doe"
				,VerificationUri = "http://www.icsharpcode.net/OpenSource/SD/Default.aspx"
			};

			_mailer.SendMail("ImportDataMail", model);

			Console.WriteLine("Mail sent.");

		}

}

}
]]>
				</File>
				<File name="packages.config"> 
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="AutofacModularity" version="1.0.2" />
  <package id="mailzor" version ="1.0.0.12" />
</packages>]]>
				</File>
				<File name="Properties\AssemblyInfo.cs" src="DefaultAssemblyInfo.cs"/>
				</Files>
	
			</Project>
			
		</SolutionFolder>

	</Solution>

</Template>